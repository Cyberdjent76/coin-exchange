{"version":3,"sources":["logo.svg","components/AccountBalance/AccountBalance.js","components/coin/Coin.js","components/CoinList/CoinList.js","components/TitleList/TitleList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Section","styled","section","_templateObject","Object","taggedTemplateLiteral","Button","button","_templateObject2","AccountBalance","props","buttonText","showBalance","balance","react_default","a","createElement","amount","onClick","event","preventDefault","handleShowBalance","CoinTd","td","Coin_templateObject","Coin","changeBalance","name","ticker","price","action","method","handleRefresh","id","Table","table","CoinList_templateObject","CoinList","coinData","map","_ref","key","Header","header","TitleList_templateObject","Image","img","TitleList_templateObject2","H1","h1","_templateObject3","TitleList","src","logo","alt","Component","Div","div","App_templateObject","COIN_COUNT","formatPrice","parseFloat","Number","toFixed","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","setShowBalance","_useState5","_useState6","setCoinData","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","coinIds","promises","coinPriceData","wrap","_context","prev","next","axios","get","sent","data","slice","coin","Promise","all","symbol","quotes","stop","apply","this","arguments","useEffect","length","_ref2","_callee2","valueChangeKey","tickerUrl","newValue","responses","_context2","concat","values","newValues","objectSpread2","_x","TitleList_TitleList","oldValue","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.101b5c3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n    color: aliceblue;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.3rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: light-gray;\r\n    border: 1px solid black;\r\n    border-radius: 5px; \r\n`;\r\n\r\n\r\nexport default function AccountBalance(props) {\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.handleShowBalance();\r\n    }\r\n    let buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n    let balance = props.showBalance ? <span><strong>Balance:</strong> ${ props.amount }</span> : \"*****\";\r\n    return (\r\n        <Section>\r\n            { balance }\r\n            <Button onClick={handleClick}>{ buttonText }</Button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinTd = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n    const handleClick = (event) => {\r\n        //prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n    let changeBalance = props.showBalance ? <CoinTd>{props.balance}</CoinTd> : \"*****\";\r\n    return (\r\n        <tr>\r\n            <CoinTd>{props.name}</CoinTd>\r\n            <CoinTd>{props.ticker}</CoinTd>\r\n            <CoinTd>${props.price}</CoinTd>\r\n            {changeBalance}\r\n            <CoinTd>\r\n                <form action='#' method='POST'>\r\n                  <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </CoinTd>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport Coin from '../coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Ticker</th>\r\n                    <th>Price</th>\r\n                    <th>Balance</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                props.coinData.map( ({key, name, ticker, balance, price}) => \r\n                <Coin key={key} \r\n                      id={key}\r\n                      handleRefresh={props.handleRefresh} \r\n                      name={name} \r\n                      ticker={ticker}\r\n                      balance={balance}\r\n                      showBalance={props.showBalance} \r\n                      price={price} />\r\n                )\r\n            }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 10rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class TitleList extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Image src={logo} alt=\"React logo\" />\r\n                    <H1>\r\n                        Coin-Exchange\r\n                    </H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport TitleList from './components/TitleList/TitleList';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  background-color: rgb(20, 56, 97);\r\n  color: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App(props) {\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes['USD'].price)\r\n      };\r\n    });\r\n    //retrieve the prices\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n  useEffect(function() {\r\n    if (coinData.length === 0) {\r\n      componentDidMount();\r\n    }\r\n  });\r\n\r\n  const handleRefresh = async (valueChangeKey) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeKey}`;\r\n    const newValue =  await axios.get( tickerUrl );\r\n    const responses = coinData.map(function(values) {\r\n      let newValues = { ...values };\r\n      if (valueChangeKey === values.key) {\r\n        newValues.price = formatPrice(newValue.data.quotes['USD'].price);\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(responses);\r\n  }\r\n\r\n  const handleShowBalance = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n  }\r\n  return (\r\n    <Div>\r\n      <TitleList />\r\n      <AccountBalance amount={balance} \r\n                      showBalance={showBalance} \r\n                      handleShowBalance={handleShowBalance} />\r\n      <CoinList coinData={coinData} \r\n                handleRefresh={handleRefresh}\r\n                showBalance={showBalance} />\r\n    </Div>\r\n  );\r\n}\r\n\r\n  \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}