{"version":3,"sources":["logo.svg","components/AccountBalance/AccountBalance.js","components/coin/Coin.js","components/CoinList/CoinList.js","components/TitleList/TitleList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Section","styled","section","_templateObject","Object","taggedTemplateLiteral","Button","button","_templateObject2","AccountBalance","props","buttonText","balance","addFunds","showBalance","react_default","a","createElement","amount","onClick","handleAddFunds","handleShowBalance","CoinTd","td","Coin_templateObject","Coin_templateObject2","Coin","Fragment","name","ticker","price","action","method","Coin_Button","event","preventDefault","handleRefresh","id","Table","table","CoinList_templateObject","CoinList","coinData","map","_ref","key","Header","header","TitleList_templateObject","Image","img","TitleList_templateObject2","H1","h1","_templateObject3","TitleList","src","logo","alt","Component","Div","div","App_templateObject","COIN_COUNT","formatPrice","parseFloat","Number","toFixed","App","_useState","useState","_useState2","slicedToArray","setBalance","_useState3","_useState4","setShowBalance","_useState5","_useState6","setCoinData","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","coinIds","promises","coinPriceData","wrap","_context","prev","next","axios","get","sent","data","slice","coin","Promise","all","symbol","quotes","stop","apply","this","arguments","useEffect","length","_ref2","_callee2","valueChangeKey","tickerUrl","newValue","responses","_context2","concat","values","newValues","objectSpread2","_x","TitleList_TitleList","oldValue","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c606a59d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.3rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: aqua;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    let buttonText = 'Show Balance';\r\n    let balance = '*****';\r\n    let addFunds = null;\r\n\r\n    if (props.showBalance) {\r\n        buttonText = 'Hide Balance';\r\n        balance = <span><strong>Balance:</strong> ${ props.amount }</span>;\r\n        addFunds = <Button onClick={props.handleAddFunds}>Add To Balance</Button>;\r\n    }\r\n\r\n    return (\r\n        <Section>\r\n            {balance}\r\n            <Button onClick={props.handleShowBalance}>{buttonText}</Button>\r\n            {addFunds}\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinTd = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.3rem;\r\n    text-align: center;\r\n    background-color: aqua;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleClick = (event) => {\r\n        // prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n\r\n    let balance = '*****';\r\n    if (props.showBalance) {\r\n        balance =\r\n            <CoinTd>\r\n                <span>{props.balance}</span>\r\n            </CoinTd>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <tr>\r\n            <CoinTd>{props.name}</CoinTd>\r\n            <CoinTd>{props.ticker}</CoinTd>\r\n            <CoinTd>${props.price}</CoinTd>\r\n            {balance}\r\n            <CoinTd>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <Button onClick={handleClick}>Refresh</Button>\r\n                </form>\r\n            </CoinTd>\r\n        </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport Coin from '../coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n\r\n    return (\r\n      <>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Ticker</th>\r\n              <th>Price</th>\r\n              {props.showBalance ? <th>Balance</th> : '*****'}\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.coinData.map(({ key, name, ticker, balance, price }) =>\r\n                <Coin key={key}\r\n                      id={key}\r\n                      handleRefresh={props.handleRefresh}\r\n                      name={name}\r\n                      ticker={ticker}\r\n                      balance={balance}\r\n                      showBalance={props.showBalance}\r\n                      price={price} />)\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    )\r\n  }\r\n","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 10rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class TitleList extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Image src={logo} alt=\"React logo\" />\r\n                    <H1>\r\n                        Coin-Exchange\r\n                    </H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport TitleList from './components/TitleList/TitleList';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  background-color: black;\r\n  color: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(2));\r\n\r\nfunction App(props) {\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes['USD'].price)\r\n      };\r\n    });\r\n    //retrieve the prices\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n  useEffect(function() {\r\n    if (coinData.length === 0) {\r\n      componentDidMount();\r\n    }\r\n  });\r\n\r\n  const handleRefresh = async (valueChangeKey) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeKey}`;\r\n    const newValue =  await axios.get( tickerUrl );\r\n    const responses = coinData.map(function(values) {\r\n      let newValues = { ...values };\r\n      if (valueChangeKey === values.key) {\r\n        newValues.price = formatPrice(newValue.data.quotes['USD'].price);\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(responses);\r\n  }\r\n\r\n  const handleShowBalance = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n  }\r\n\r\n  const handleAddFunds = () => {\r\n    setBalance(oldValue => oldValue + 1200);\r\n  }\r\n\r\n  return (\r\n    <Div>\r\n      <TitleList />\r\n      <AccountBalance amount={balance} \r\n                      showBalance={showBalance} \r\n                      handleShowBalance={handleShowBalance}\r\n                      handleAddFunds={handleAddFunds} />\r\n      <CoinList coinData={coinData} \r\n                handleRefresh={handleRefresh}\r\n                showBalance={showBalance} />\r\n    </Div>\r\n  );\r\n}\r\n\r\n  \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}