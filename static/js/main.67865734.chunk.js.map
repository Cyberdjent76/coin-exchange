{"version":3,"sources":["logo.svg","components/AccountBalance/AccountBalance.js","components/coin/Coin.js","components/CoinList/CoinList.js","components/TitleList/TitleList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Section","styled","section","_templateObject","Object","taggedTemplateLiteral","Button","button","_templateObject2","AccountBalance","props","buttonText","balance","addFunds","showBalance","react_default","a","createElement","amount","toFixed","className","onClick","handleAddFunds","handleShowBalance","window","location","reload","CoinTd","td","Coin_templateObject","Coin_templateObject2","CoinButton","_templateObject3","Coin","_useState","useState","_useState2","slicedToArray","openModal","setOpenModal","closeModal","_useState3","_useState4","handleCoinModal","setCoinModal","HandleCoinModal","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","url","response","coinDescription","wrap","_context","prev","next","open","concat","id","axios","get","sent","data","description","stop","_x","apply","this","arguments","Fragment","name","reactjs_popup_esm","closeOnDocumentClick","onClose","ticker","price","action","method","Coin_Button","preventDefault","handleRefresh","handleTrading","Table","table","CoinList_templateObject","CoinList","coinData","map","key","rank","Coin_Coin","Header","header","TitleList_templateObject","Image","img","TitleList_templateObject2","H1","h1","TitleList_templateObject3","TitleList","src","logo","alt","Component","Div","div","App_templateObject","COIN_COUNT","formatPrice","parseFloat","Number","App","setBalance","setShowBalance","_useState5","_useState6","setCoinData","componentDidMount","coinIds","promises","coinPriceData","slice","coin","Promise","all","symbol","quotes","useEffect","length","_ref2","_callee2","valueChangeKey","tickerUrl","newValue","responses","_context2","values","newValues","objectSpread2","TitleList_TitleList","oldValue","isBuy","balanceShift","oldBalance","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.67865734.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.3rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: aqua;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    let buttonText = 'Show Balance';\r\n    let balance = '*****';\r\n    let addFunds = null;\r\n\r\n    if (props.showBalance) {\r\n        buttonText = 'Hide Balance';\r\n        balance = <span><strong>Balance:</strong> ${ props.amount.toFixed(2) }</span>;\r\n        addFunds = <Button \r\n                        className=\"btn btn-outline-primary\" \r\n                        onClick={props.handleAddFunds}>Add To Balance\r\n                        <i className=\"fas fa-helicopter\"></i>\r\n                    </Button>;\r\n    }\r\n\r\n    return (\r\n        <Section>\r\n            {balance}\r\n            <Button className=\"btn btn-outline-primary\" \r\n                onClick={props.handleShowBalance}>{buttonText}</Button>\r\n            {addFunds}\r\n            <Button className=\"btn btn-outline-primary\"\r\n                onClick={() => window.location.reload(false)}>Lazy Refresh</Button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport './Coin.css';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\n\r\nconst CoinTd = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 40vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1 rem;\r\n    background-color: aqua;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CoinButton = styled.button`\r\n    font-size: 1 rem;\r\n    width: 17vw;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const closeModal = () => setOpenModal(false);\r\n    const [handleCoinModal, setCoinModal] = useState('');\r\n\r\n    const handleClick = (event) => {\r\n        // prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n\r\n    const handleBuyTrade = (event) => {\r\n        event.preventDefault();\r\n        props.handleTrading(true, props.id);\r\n    }\r\n\r\n    const handleSellTrade = (event) => {\r\n        event.preventDefault();\r\n        props.handleTrading(false, props.id);\r\n    }\r\n\r\n    const HandleCoinModal = async (event) => {\r\n        setOpenModal(open => !open);\r\n        const url = `https://api.coinpaprika.com/v1/coins/${props.id}`;\r\n        const response = await axios.get(url);\r\n        const coinDescription = response.data.description;\r\n        setCoinModal(coinDescription);\r\n    }\r\n\r\n    let balance = '*****';\r\n    if (props.showBalance) {\r\n        balance =\r\n            <CoinTd>\r\n                <span>{props.balance}</span>\r\n            </CoinTd>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <tr>\r\n            <CoinTd>\r\n                <CoinButton\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={HandleCoinModal}>\r\n                    {props.name}\r\n                </CoinButton>\r\n            </CoinTd>\r\n            <Popup\r\n                open={openModal}\r\n                closeOnDocumentClick\r\n                onClose={closeModal}>\r\n                    <div className=\"popup\">\r\n                    <button className=\"close\" onClick={closeModal}>\r\n                        &times;\r\n                    </button>\r\n                        {handleCoinModal}\r\n                    </div>\r\n            </Popup>\r\n            <CoinTd>{props.ticker}</CoinTd>\r\n            <CoinTd>${props.price}</CoinTd>\r\n            {balance}\r\n            <CoinTd>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <Button className=\"btn btn-outline-primary\" onClick={handleClick}>Refresh</Button>\r\n                    <Button className=\"btn btn-outline-success\" onClick={handleBuyTrade}>Buy</Button>\r\n                    <Button className=\"btn btn-outline-danger\" onClick={handleSellTrade}>Sell</Button>\r\n                </form>\r\n            </CoinTd>\r\n        </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from '../coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n\r\n    return (\r\n      <>\r\n        <Table className='table table-hover table-bordered'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Ticker</th>\r\n              <th>Price</th>\r\n              {props.showBalance ? <th>Balance</th> : '*****'}\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.coinData.map(({ key, rank, name, ticker, balance, price }) =>\r\n                <Coin key={key}\r\n                      id={key}\r\n                      handleRefresh={props.handleRefresh}\r\n                      handleTrading={props.handleTrading}\r\n                      name={name}\r\n                      ticker={ticker}\r\n                      balance={balance}\r\n                      showBalance={props.showBalance}\r\n                      price={price} />)\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    )\r\n  }\r\n","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 10rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class TitleList extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Image src={logo} alt=\"React logo\" />\r\n                    <H1>\r\n                        Coin-Exchange\r\n                    </H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport TitleList from './components/TitleList/TitleList';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport 'bootswatch/dist/cyborg/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  background-color: black;\r\n  color: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(2));\r\n\r\nfunction App(props) {\r\n  const [balance, setBalance] = useState(50000);\r\n  const [showBalance, setShowBalance] = useState(false);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes['USD'].price)\r\n      };\r\n    });\r\n    //retrieve the prices\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n  useEffect(function() {\r\n    if (coinData.length === 0) {\r\n      componentDidMount();\r\n    }\r\n  });\r\n\r\n  const handleRefresh = async (valueChangeKey) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeKey}`;\r\n    const newValue =  await axios.get( tickerUrl );\r\n    const responses = coinData.map(function(values) {\r\n      let newValues = { ...values };\r\n      if (valueChangeKey === values.key) {\r\n        newValues.price = formatPrice(newValue.data.quotes['USD'].price);\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(responses);\r\n  }\r\n\r\n  const handleShowBalance = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n  }\r\n\r\n  const handleAddFunds = () => {\r\n    setBalance(oldValue => oldValue + 1200);\r\n  }\r\n\r\n  const handleTrading = (isBuy, valueChangeKey) => { \r\n    const balanceShift = isBuy ? 1 : -1; //1 = buy, -1 = sell\r\n    const responses = coinData.map(function(values) {\r\n      let newValues = { ...values };\r\n      if (valueChangeKey === values.key) {\r\n        newValues.balance += balanceShift;\r\n        setBalance(oldBalance => oldBalance - balanceShift * newValues.price);\r\n      }\r\n      return newValues;\r\n    });    \r\n    setCoinData(responses);\r\n  }\r\n\r\n  return (\r\n    <Div>\r\n      <TitleList />\r\n      <AccountBalance amount={balance} \r\n                      showBalance={showBalance} \r\n                      handleShowBalance={handleShowBalance}\r\n                      handleAddFunds={handleAddFunds} />\r\n      <CoinList coinData={coinData} \r\n                handleRefresh={handleRefresh}\r\n                showBalance={showBalance}\r\n                handleTrading={handleTrading} />\r\n    </Div>\r\n  );\r\n}\r\n\r\n  \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}